<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>uk.gov.justice</groupId>
        <artifactId>maven-common</artifactId>
        <version>1.6.9-SNAPSHOT</version>
    </parent>

    <artifactId>parent-pom</artifactId>
    <packaging>pom</packaging>
    <name>Parent POM</name>
    <description>Parent POM for all projects</description>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!-- Minimum version of Maven required to build the project -->
        <maven.minimum.version>3.1.0</maven.minimum.version>

        <!-- Enforcer settings - ranges need to be in the format defined at http://maven.apache.org/enforcer/enforcer-rules/versionRanges.html -->
        <enforcer.maven.version.range>[${maven.minimum.version},)</enforcer.maven.version.range>
        <enforcer.java.version.range>[1.8,)</enforcer.java.version.range>

        <!-- Java API versions targeted -->
        <java.se.version>8</java.se.version>
        <java.ee.version>7</java.ee.version>

        <!-- Compilation properties -->
        <compiler.source>1.8</compiler.source>
        <compiler.target>1.8</compiler.target>
        <compiler.debug>true</compiler.debug>
        <compiler.debuglevel>lines,vars,source</compiler.debuglevel>
        <compiler.showdeprecation>true</compiler.showdeprecation>
        <compiler.showwarnings>true</compiler.showwarnings>
        <compiler.optimise>true</compiler.optimise>
        <compiler.max.errors>100</compiler.max.errors>
        <compiler.max.warnings>100</compiler.max.warnings>

        <!-- Maven and 3rd party plugin versions -->
        <!-- Code quality assurance -->
        <plugins.cobertura.version>2.7</plugins.cobertura.version>
        <plugins.findbugs.version>3.0.3</plugins.findbugs.version>
        <plugins.maven.checkstyle.version>2.17</plugins.maven.checkstyle.version>
        <plugins.maven.enforcer.version>1.4.1</plugins.maven.enforcer.version>

        <plugins.maven.clean.version>3.0.0</plugins.maven.clean.version>
        <plugins.maven.compiler.version>3.5.1</plugins.maven.compiler.version>
        <plugins.maven.dependency.version>2.10</plugins.maven.dependency.version>
        <plugins.maven.deploy.version>2.8.2</plugins.maven.deploy.version>
        <plugins.maven.ear.version>2.10.1</plugins.maven.ear.version>
        <plugins.maven.ejb.version>2.5.1</plugins.maven.ejb.version>
        <plugins.maven.install.version>2.5.2</plugins.maven.install.version>
        <plugins.maven.jar.version>2.6</plugins.maven.jar.version>
        <plugins.maven.javadoc.version>2.10.3</plugins.maven.javadoc.version>
        <plugins.maven.assembly.version>2.6</plugins.maven.assembly.version>
        <plugins.maven.jxr.version>2.5</plugins.maven.jxr.version>
        <plugins.maven.pmd.version>3.6</plugins.maven.pmd.version>
        <plugins.maven.project.info.reports.version>2.8.1
        </plugins.maven.project.info.reports.version>
        <plugins.maven.resources.version>2.7</plugins.maven.resources.version>
        <plugins.maven.site.version>3.4</plugins.maven.site.version>
        <plugins.maven.source.version>2.4</plugins.maven.source.version>

        <plugins.maven.wagon.version>2.10</plugins.maven.wagon.version>
        <plugins.maven.war.version>2.6</plugins.maven.war.version>
        <plugins.taglist.version>2.4</plugins.taglist.version>
        <plugins.versions.version>2.2</plugins.versions.version>
        <liquibase.version>3.4.2</liquibase.version>
        <plugins.maven.shade.version>2.4.3</plugins.maven.shade.version>

        <plugins.coveralls.version>4.1.0</plugins.coveralls.version>

        <plugins.buildnumber.version>1.4</plugins.buildnumber.version>
        <plugins.buildhelper.version>1.10</plugins.buildhelper.version>

        <!-- testing -->
        <plugins.maven.surefire.version>2.19.1</plugins.maven.surefire.version>
        <plugins.maven.failsafe.version>2.19.1</plugins.maven.failsafe.version>

        <!-- Javadoc links to Java APIs -->
        <javadoc.java.link>http://download.oracle.com/javase/${java.se.version}/docs/api/
        </javadoc.java.link>
        <javadoc.javaee.link>http://download.oracle.com/javaee/${java.ee.version}/api/
        </javadoc.javaee.link>
        <javadoc.javamail.link>http://javamail.kenai.com/nonav/javadocs/</javadoc.javamail.link>

        <plugins.maven.wildfly.version>1.0.2.Final</plugins.maven.wildfly.version>
        <plugins.maven.wildfly.skip>true</plugins.maven.wildfly.skip>

        <plugins.jacoco.version>0.7.5.201505241946</plugins.jacoco.version>
        <plugins.raml.utils.version>1.2.2</plugins.raml.utils.version>

    </properties>

    <!--
    =============
    PREREQUISITES
    =============
    -->

    <prerequisites>
        <maven>${maven.minimum.version}</maven>
    </prerequisites>


    <!--
    =====
    BUILD
    =====
    -->

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
            <resource>
                <directory>${project.build.directory}/generated-resources</directory>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
            <testResource>
                <directory>${project.build.directory}/generated-test-resources</directory>
            </testResource>
        </testResources>

        <!-- Default plugin versions and management -->
        <pluginManagement>
            <plugins>

                <!-- WildFly plugin to deploy war -->
                <plugin>
                    <groupId>org.wildfly.plugins</groupId>
                    <artifactId>wildfly-maven-plugin</artifactId>
                    <version>${plugins.maven.wildfly.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${plugins.maven.surefire.version}</version>
                    <configuration>
                        <useSystemClassLoader>false</useSystemClassLoader>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${plugins.maven.surefire.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${plugins.maven.failsafe.version}</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>verify</id>
                            <goals>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${plugins.maven.clean.version}</version>
                </plugin>

                <!-- Add more properties to the Java compilation - http://maven.apache.org/plugins/maven-compiler-plugin/ -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugins.maven.compiler.version}</version>
                    <!-- Configuration reference - http://maven.apache.org/plugins/maven-compiler-plugin/compile-mojo.html -->
                    <configuration>
                        <source>${compiler.source}</source>
                        <target>${compiler.target}</target>
                        <debug>${compiler.debug}</debug>
                        <debuglevel>${compiler.debuglevel}</debuglevel>
                        <showDeprecation>${compiler.showdeprecation}</showDeprecation>
                        <showWarnings>${compiler.showwarnings}</showWarnings>
                        <optimize>${compiler.optimise}</optimize>
                        <compilerArguments>
                            <Xmaxerrs>${compiler.max.errors}</Xmaxerrs>
                            <Xmaxwarns>${compiler.max.warnings}</Xmaxwarns>
                            <Xlint/>
                            <parameters/>
                        </compilerArguments>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${plugins.maven.deploy.version}</version>
                </plugin>

                <plugin>
                    <artifactId>maven-ear-plugin</artifactId>
                    <version>${plugins.maven.ear.version}</version>
                    <configuration>
                        <generateApplicationXml>true</generateApplicationXml>
                        <version>${java.ee.version}</version>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true
                                </addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true
                                </addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Build-Date>${ci.buildTimestamp}</Build-Date>
                            </manifestEntries>
                            <manifestSections>
                                <manifestSection>
                                    <name>SCM</name>
                                    <manifestEntries>
                                        <Scm-Type>Git</Scm-Type>
                                        <Scm-Revision>${git.revision}</Scm-Revision>
                                        <Scm-Branch>${git.branch}</Scm-Branch>
                                        <Scm-Url>${git.url}</Scm-Url>
                                    </manifestEntries>
                                </manifestSection>
                                <manifestSection>
                                    <name>CI</name>
                                    <manifestEntries>
                                        <CI-Type>${ci.type}</CI-Type>
                                        <CI-Build>${ci.build}</CI-Build>
                                        <CI-BuildNode>${ci.buildNode}</CI-BuildNode>
                                        <CI-BuildTimestamp>${ci.buildTimestamp}</CI-BuildTimestamp>
                                        <CI-BuildUrl>${ci.buildUrl}</CI-BuildUrl>
                                        <CI-BuildTag>${ci.buildTag}</CI-BuildTag>
                                        <CI-BuiltBy>${ci.builtBy}</CI-BuiltBy>
                                        <CI-Job>${ci.job}</CI-Job>
                                        <CI-JobUrl>${ci.jobUrl}</CI-JobUrl>
                                        <CI-MavenVersion>${maven.version}</CI-MavenVersion>
                                    </manifestEntries>
                                </manifestSection>
                            </manifestSections>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-ejb-plugin</artifactId>
                    <version>${plugins.maven.ejb.version}</version>
                    <configuration>
                        <ejbVersion>${ejb.version}</ejbVersion>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true
                                </addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true
                                </addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Build-Date>${ci.buildTimestamp}</Build-Date>
                            </manifestEntries>
                            <manifestSections>
                                <manifestSection>
                                    <name>SCM</name>
                                    <manifestEntries>
                                        <Scm-Type>Git</Scm-Type>
                                        <Scm-Revision>${git.revision}</Scm-Revision>
                                        <Scm-Branch>${git.branch}</Scm-Branch>
                                        <Scm-Url>${git.url}</Scm-Url>
                                    </manifestEntries>
                                </manifestSection>
                                <manifestSection>
                                    <name>CI</name>
                                    <manifestEntries>
                                        <CI-Type>${ci.type}</CI-Type>
                                        <CI-Build>${ci.build}</CI-Build>
                                        <CI-BuildNode>${ci.buildNode}</CI-BuildNode>
                                        <CI-BuildTimestamp>${ci.buildTimestamp}</CI-BuildTimestamp>
                                        <CI-BuildUrl>${ci.buildUrl}</CI-BuildUrl>
                                        <CI-BuildTag>${ci.buildTag}</CI-BuildTag>
                                        <CI-BuiltBy>${ci.builtBy}</CI-BuiltBy>
                                        <CI-Job>${ci.job}</CI-Job>
                                        <CI-JobUrl>${ci.jobUrl}</CI-JobUrl>
                                        <CI-MavenVersion>${maven.version}</CI-MavenVersion>
                                    </manifestEntries>
                                </manifestSection>
                            </manifestSections>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${plugins.maven.install.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${plugins.maven.jar.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true
                                </addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true
                                </addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Build-Date>${ci.buildTimestamp}</Build-Date>
                            </manifestEntries>
                            <manifestSections>
                                <manifestSection>
                                    <name>SCM</name>
                                    <manifestEntries>
                                        <Scm-Type>Git</Scm-Type>
                                        <Scm-Revision>${git.revision}</Scm-Revision>
                                        <Scm-Branch>${git.branch}</Scm-Branch>
                                        <Scm-Url>${git.url}</Scm-Url>
                                    </manifestEntries>
                                </manifestSection>
                                <manifestSection>
                                    <name>CI</name>
                                    <manifestEntries>
                                        <CI-Type>${ci.type}</CI-Type>
                                        <CI-Build>${ci.build}</CI-Build>
                                        <CI-BuildNode>${ci.buildNode}</CI-BuildNode>
                                        <CI-BuildTimestamp>${ci.buildTimestamp}</CI-BuildTimestamp>
                                        <CI-BuildUrl>${ci.buildUrl}</CI-BuildUrl>
                                        <CI-BuildTag>${ci.buildTag}</CI-BuildTag>
                                        <CI-BuiltBy>${ci.builtBy}</CI-BuiltBy>
                                        <CI-Job>${ci.job}</CI-Job>
                                        <CI-JobUrl>${ci.jobUrl}</CI-JobUrl>
                                        <CI-MavenVersion>${maven.version}</CI-MavenVersion>
                                    </manifestEntries>
                                </manifestSection>
                            </manifestSections>
                        </archive>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${plugins.maven.javadoc.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${plugins.maven.assembly.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugins.maven.resources.version}</version>
                    <executions>
                        <execution>
                            <id>copy-json-test-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/generated-test-resources/json
                                </outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/raml/json</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-json-schema-resources</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/target/generated-resources/json/schema
                                </outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>src/raml/json/schema</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${plugins.maven.site.version}</version>
                    <!-- <configuration>
                        <targetJdk>1.6</targetJdk>
                    </configuration> -->
                    <dependencies>
                        <!-- Add support for SSH/ SCP and FTP -->
                        <dependency>
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-ftp</artifactId>
                            <version>${plugins.maven.wagon.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-ssh</artifactId>
                            <version>${plugins.maven.wagon.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${plugins.maven.source.version}</version>
                </plugin>

                <!-- Make sure the generated web.xml is added to the WAR and not the default one -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>${plugins.maven.war.version}</version>
                    <configuration>
                        <packagingExcludes>WEB-INF/web.xml</packagingExcludes>
                        <!-- Java EE 7 doesn't require web.xml, Maven needs to catch up! -->
                        <failOnMissingWebXml>false</failOnMissingWebXml>
                        <archive>
                            <manifest>
                                <addClasspath>true</addClasspath>
                                <addDefaultImplementationEntries>true
                                </addDefaultImplementationEntries>
                                <addDefaultSpecificationEntries>true
                                </addDefaultSpecificationEntries>
                            </manifest>
                            <manifestEntries>
                                <Build-Date>${ci.buildTimestamp}</Build-Date>
                            </manifestEntries>
                            <manifestSections>
                                <manifestSection>
                                    <name>SCM</name>
                                    <manifestEntries>
                                        <Scm-Type>Git</Scm-Type>
                                        <Scm-Revision>${git.revision}</Scm-Revision>
                                        <Scm-Branch>${git.branch}</Scm-Branch>
                                        <Scm-Url>${git.url}</Scm-Url>
                                    </manifestEntries>
                                </manifestSection>
                                <manifestSection>
                                    <name>CI</name>
                                    <manifestEntries>
                                        <CI-Type>${ci.type}</CI-Type>
                                        <CI-Build>${ci.build}</CI-Build>
                                        <CI-BuildNode>${ci.buildNode}</CI-BuildNode>
                                        <CI-BuildTimestamp>${ci.buildTimestamp}</CI-BuildTimestamp>
                                        <CI-BuildUrl>${ci.buildUrl}</CI-BuildUrl>
                                        <CI-BuildTag>${ci.buildTag}</CI-BuildTag>
                                        <CI-BuiltBy>${ci.builtBy}</CI-BuiltBy>
                                        <CI-Job>${ci.job}</CI-Job>
                                        <CI-JobUrl>${ci.jobUrl}</CI-JobUrl>
                                        <CI-MavenVersion>${maven.version}</CI-MavenVersion>
                                    </manifestEntries>
                                </manifestSection>
                            </manifestSections>
                        </archive>
                    </configuration>
                </plugin>

                <!-- Only used when _not_ running a CI build -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>buildnumber-maven-plugin</artifactId>
                    <version>${plugins.buildnumber.version}</version>
                    <executions>
                        <execution>
                            <id>buildnumber-git</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>create</goal>
                            </goals>
                            <configuration>
                                <buildNumberPropertyName>git.revision</buildNumberPropertyName>
                                <scmBranchPropertyName>git.branch</scmBranchPropertyName>
                                <timestampPropertyName>git.timestamp</timestampPropertyName>
                            </configuration>
                        </execution>
                    </executions>
                    <configuration>
                        <doCheck>false</doCheck>
                        <doUpdate>false</doUpdate>
                        <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                        <revisionOnScmFailure>UNKNOWN</revisionOnScmFailure>
                        <shortRevisionLength>7</shortRevisionLength>
                        <useLatestCommittedRevision>false</useLatestCommittedRevision>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${plugins.buildhelper.version}</version>
                    <executions>
                        <execution>
                            <id>maven-version</id>
                            <goals>
                                <goal>maven-version</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-maven-plugin</artifactId>
                    <version>${liquibase.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${plugins.maven.shade.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.eluder.coveralls</groupId>
                    <artifactId>coveralls-maven-plugin</artifactId>
                    <version>${plugins.coveralls.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.edugility</groupId>
                    <artifactId>h2-maven-plugin</artifactId>
                    <version>1.0</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.h2database</groupId>
                            <artifactId>h2</artifactId>
                            <version>${h2.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

            </plugins>

        </pluginManagement>

        <!-- Plugin configuration -->
        <plugins>


            <!-- Copy dependencies - http://maven.apache.org/plugins/maven-dependency-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${plugins.maven.dependency.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <!-- Exclude test and provided dependencies. First comment here explains why done this way: http://jira.codehaus.org/browse/MDEP-128 -->
                            <includeScope>runtime</includeScope>
                            <excludeScope>provided</excludeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${plugins.maven.enforcer.version}</version>
                <executions>
                    <execution>
                        <id>enforce-rules</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                        <configuration>
                            <!--Available rules - http://maven.apache.org/enforcer/enforcer-rules/-->
                            <rules>
                                <requireJavaVersion>
                                    <version>${enforcer.java.version.range}</version>
                                </requireJavaVersion>
                                <requireMavenVersion>
                                    <version>${enforcer.maven.version.range}</version>
                                </requireMavenVersion>
                                <requirePluginVersions>
                                    <message>Please define plugin versions</message>
                                </requirePluginVersions>
                                <dependencyConvergence/>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- The WildFly plugin deploys your war to a local WildFly container -->
            <!-- Skip modules by default. To enable a module configure the plugin for that specific module -->
            <!-- To use, run: mvn package wildfly:deploy -->
            <plugin>
                <groupId>org.wildfly.plugins</groupId>
                <artifactId>wildfly-maven-plugin</artifactId>
                <configuration>
                    <skip>${plugins.maven.wildfly.skip}</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${plugins.jacoco.version}</version>
                <configuration>
                    <excludes>
                        <exclude>uk/gov/justice/api/*Application.class</exclude>
                        <exclude>uk/gov/justice/api/*JmsListener.class</exclude>
                        <exclude>uk/gov/justice/api/Remote*.class</exclude>
                        <exclude>uk/gov/justice/api/resource/*Resource.class</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>default-prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report</id>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-report-integration</id>
                        <goals>
                            <goal>report-integration</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>default-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <!-- implementation is needed only for Maven 2 -->
                                <rule implementation="org.jacoco.maven.RuleConfiguration">
                                    <element>BUNDLE</element>
                                    <limits>
                                        <!-- implementation is needed only for Maven 2 -->
                                        <limit implementation="org.jacoco.report.check.Limit">
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0.0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

    </build>


    <!--
    =======================
    DISTRIBUTION MANAGEMENT
    =======================
    -->

    <!-- NOTHING SET YET -->


    <!--
    =======
    REPORTS
    =======
    -->

    <reporting>

        <plugins>
            <!-- Define reports plugin - http://maven.apache.org/plugins/maven-site-plugin/examples/configuring-reports.html and http://maven.apache.org/plugins/maven-project-info-reports-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${plugins.maven.project.info.reports.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>cim</report>
                            <report>dependencies</report>
                            <report>dependency-convergence</report>
                            <report>dependency-management</report>
                            <report>distribution-management</report>
                            <report>help</report>
                            <report>index</report>
                            <report>modules</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- Generate Javadoc - http://maven.apache.org/plugins/maven-javadoc-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${plugins.maven.javadoc.version}</version>
                <!-- Configuration options - http://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html -->
                <configuration>
                    <detectLinks/>
                    <links>
                        <link>${javadoc.java.link}</link>
                        <link>${javadoc.javamail.link}</link>
                        <link>${javadoc.javaee.link}</link>
                    </links>
                    <quiet>true</quiet>
                    <source>${compiler.source}</source>
                </configuration>
            </plugin>

            <!-- Surefire test report - http://maven.apache.org/plugins/maven-surefire-report-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${plugins.maven.surefire.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${plugins.maven.surefire.version}</version>
            </plugin>

            <!-- Check coding style - http://maven.apache.org/plugins/maven-checkstyle-plugin/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${plugins.maven.checkstyle.version}</version>
            </plugin>

            <!-- Generate a cross-reference of the projects sources - http://maven.apache.org/plugins/maven-jxr-plugin/usage.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${plugins.maven.jxr.version}</version>
            </plugin>

            <!-- Look for potential code problems using FindBugs - http://mojo.codehaus.org/findbugs-maven-plugin/ -->
            <!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${plugins.findbugs.version}</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
            -->
            <!-- Optional directory to put findbugs xdoc xml report -->
            <!--
                     <xmlOutputDirectory>target/site</xmlOutputDirectory>
                </configuration>
            </plugin>
            -->

            <!-- Look for potential code problems using PMD - http://pmd.sourceforge.net/pmd-5.0.0/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${plugins.maven.pmd.version}</version>
                <configuration>
                    <targetJdk>${compiler.target}</targetJdk>
                </configuration>
            </plugin>

            <!-- Generate a report on various tags found in the code - http://mojo.codehaus.org/taglist-maven-plugin/ -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>taglist-maven-plugin</artifactId>
                <version>${plugins.taglist.version}</version>
                <configuration>
                    <tagListOptions>
                        <tagClasses>
                            <tagClass>
                                <displayName>To do Work</displayName>
                                <tags>
                                    <tag>
                                        <matchString>fixme</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                    <tag>
                                        <matchString>todo</matchString>
                                        <matchType>ignoreCase</matchType>
                                    </tag>
                                </tags>
                            </tagClass>
                        </tagClasses>
                    </tagListOptions>
                </configuration>
            </plugin>

            <!-- Generate reports on available updates - http://mojo.codehaus.org/versions-maven-plugin/ -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>${plugins.versions.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>dependency-updates-report</report>
                            <report>plugin-updates-report</report>
                            <report>property-updates-report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>

            <!-- Generate reports on code test coverage using cobertura -->

            <!-- integrate maven-cobertura-plugin to project site -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <version>${plugins.cobertura.version}</version>
                <configuration>
                    <!-- Added instrumentation and quiet=true to silence Java 8 lambda warnings -->
                    <instrumentation>
                        <ignoreTrivial>true</ignoreTrivial>
                    </instrumentation>
                    <quiet>true</quiet>
                    <formats>
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                </configuration>
            </plugin>

        </plugins>

    </reporting>


    <!--
    ============
    ORGANISATION
    ============
    -->

    <organization>
        <name>Ministry of Justice</name>
        <url>http://www.justice.gov.uk/</url>
    </organization>

    <!--
    ========
    PROFILES
    ========
    -->

    <profiles>
        <!-- Properties representing Java EE specific API versions -->
        <profile>
            <id>java-ee-7</id>
            <activation>
                <property>
                    <name>java.ee.version</name>
                    <value>7</value>
                </property>
            </activation>
            <properties>
                <ejb.version>3.2</ejb.version>
            </properties>
        </profile>

        <!-- Automatically determine hostname of machine doing build (for injection into Manifest) -->
        <profile>
            <id>windows</id>
            <activation>
                <os>
                    <family>windows</family>
                </os>
            </activation>
            <properties>
                <ci.buildNode>${env.COMPUTERNAME}</ci.buildNode>
            </properties>
        </profile>
        <profile>
            <id>unix</id>
            <activation>
                <os>
                    <family>!windows</family>
                </os>
            </activation>
            <properties>
                <ci.buildNode>${env.HOSTNAME}</ci.buildNode>
            </properties>
        </profile>

        <!-- Profile for a local CI build. local build is default -->
        <profile>
            <id>ci-build-local</id>
            <activation>
                <property>
                    <name>!ci.type</name>
                </property>
            </activation>
            <properties>
                <git.url>LOCAL</git.url>

                <ci.type>LOCAL</ci.type>
                <ci.build>0</ci.build>
                <ci.buildTimestamp>${maven.build.timestamp}</ci.buildTimestamp>
                <ci.buildUrl>${project.baseUri}</ci.buildUrl>
                <ci.buildTag>LOCAL</ci.buildTag>
                <ci.builtBy>${user.name}</ci.builtBy>
                <ci.job>LOCAL</ci.job>
                <ci.jobUrl>${project.baseUri}</ci.jobUrl>
            </properties>
            <build>
                <plugins>
                    <!-- buildnumber sets git.revision, git.branch and git.timestamp -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>buildnumber-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- Profiles for a CI build. ci.type property _must_ be set to jenkins or else a local build is assumed
             Autodetection via environment variables is difficult as JENKINS_HOME etc. is not always set (e.g. on build slave) and JOB_URL / BUILD_URL is too generic
         -->
        <profile>
            <id>ci-build-jenkins</id>
            <activation>
                <property>
                    <name>ci.type</name>
                    <value>jenkins</value>
                </property>
            </activation>
            <properties>
                <git.revision>${env.GIT_COMMIT}</git.revision>
                <git.branch>${env.GIT_BRANCH}</git.branch>
                <git.timestamp>UNKNOWN</git.timestamp>
                <git.url>${env.GIT_URL}</git.url>

                <ci.build>${env.BUILD_NUMBER}</ci.build>
                <ci.buildNode>${env.NODE_NAME}</ci.buildNode>
                <ci.buildTimestamp>${env.BUILD_ID}</ci.buildTimestamp>
                <ci.buildUrl>${env.BUILD_URL}</ci.buildUrl>
                <ci.buildTag>${env.BUILD_TAG}</ci.buildTag>
                <ci.builtBy>${user.name}</ci.builtBy>
                <ci.job>${env.JOB_NAME}</ci.job>
                <ci.jobUrl>${env.JOB_URL}</ci.jobUrl>
            </properties>
        </profile>

        <!-- Release profile - builds JAR of source code and Javadocs. Usage: mvn -Prelease -->
        <profile>
            <id>release</id>
            <build>
                <plugins>

                    <!-- Install source files with artifact - http://maven.apache.org/plugins/maven-source-plugin/usage.html -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Install Javadocs with artifact - http://maven.apache.org/plugins/maven-javadoc-plugin/ -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <detectLinks/>
                                    <links>
                                        <link>${javadoc.java.link}</link>
                                        <link>${javadoc.javamail.link}</link>
                                        <link>${javadoc.javaee.link}</link>
                                    </links>
                                    <quiet>true</quiet>
                                    <source>${compiler.source}</source>
                                    <failOnError>false</failOnError>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>
        <profile>
            <id>only-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself -->
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-dependency-plugin</artifactId>
                                                <versionRange>[2.8,)</versionRange>
                                                <goals>
                                                    <goal>copy-dependencies</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore/>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
        <profile>
            <id>raml-jar</id>
            <activation>
                <file>
                    <exists>src/raml</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-jar-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>raml</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <phase>package</phase>
                                <configuration>
                                    <classifier>raml</classifier>
                                    <classesDirectory>${project.basedir}/src</classesDirectory>
                                    <includes>
                                        <include>raml/**</include>
                                    </includes>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>liquibase-jar</id>
            <activation>
                <file>
                    <exists>src/main/resources/liquibase.properties</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <configuration>
                            <propertyFile>src/main/resources/liquibase.properties</propertyFile>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jar-plugin</artifactId>
                        <configuration>
                            <archive>
                                <manifest>
                                    <addClasspath>true</addClasspath>
                                    <mainClass>liquibase.integration.commandline.Main</mainClass>
                                </manifest>
                            </archive>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-shade-plugin</artifactId>
                        <configuration>
                            <dependencyReducedPomLocation>
                                ${project.build.directory}/dependency-reduced-pom.xml
                            </dependencyReducedPomLocation>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>shade</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>

            <dependencies>
                <dependency>
                    <groupId>org.liquibase</groupId>
                    <artifactId>liquibase-core</artifactId>
                    <version>${liquibase.version}</version>
                </dependency>
                <dependency>
                    <groupId>org.postgresql</groupId>
                    <artifactId>postgresql</artifactId>
                    <version>${postgresql.driver.version}</version>
                </dependency>
            </dependencies>
        </profile>

    </profiles>
</project>
